{"version":3,"sources":["webpack:///./src/app/services/data.service.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/add-friend/add-friend.component.ts","webpack:///./src/app/components/friends/friends.component.ts","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/logout/logout.component.ts","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/news-feed/news-feed.component.ts","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/components/add-friend/add-friend.component.css","webpack:///./src/app/components/friends/friends.component.css","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/logout/logout.component.css","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/news-feed/news-feed.component.css","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/user/user.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/components/add-friend/add-friend.component.html","webpack:///./src/app/components/friends/friends.component.html","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/logout/logout.component.html","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/news-feed/news-feed.component.html","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/user/user.component.html","webpack:///./src/app/services/post.service.ts","webpack:///./src/app/services/friend.service.ts","webpack:///./src async","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { User } from '../models/User';\n\nimport { Http, Headers, RequestOptions } from '@angular/http';\n\nimport 'rxjs/add/operator/map';\n\n\n@Injectable()\nexport class DataService {\n\n  result:any;\n\n  constructor(private _http: Http) { }\n\n  getUsers() {\n    return this._http.get(\"/api/users\")\n    .map(result => this.result = result.json().data);\n  }\n\n  getUser(user:string) {\n    var url = \"/api/users/\"+user;\n    return this._http.get(url)\n    .map(result => {\n      return result.json().data;\n    });\n  }\n\n  // Get a user that isn't the currently logged in user.\n  getAnonymousUser(id:string) {\n    var url = \"/api/usersanon/\"+id;\n    return this._http.get(url)\n    .map(result => {\n      return result.json().data;\n    });\n  }\n\n  registerUser(user:User) {\n    // Convert the user object to JSON\n    let body = JSON.stringify(user);\n    /* Create the headers to tell the API we are using\n    JSON */\n    let headers = new Headers({'Content-Type': 'application/json'});\n    // Set these in options\n    let options = new RequestOptions({ headers: headers });\n\n    // Make the request\n    return this._http.post(\"/api/users\", body, options)\n    .map((data:any) => data.json())\n    .subscribe();\n  }\n\n  updateUser(user:User) {\n    // Convert the user object to JSON\n    let body = JSON.stringify(user);\n\n    console.log(body);\n\n    /* Create the headers to tell the API we are using\n    JSON */\n    let headers = new Headers({'Content-Type': 'application/json'});\n    // Set these in options\n    let options = new RequestOptions({ headers: headers });\n\n    // Make the request\n    return this._http.post(\"/api/users/\"+user.email, body, options)\n    .map((data:any) => data.json())\n    .subscribe();\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/data.service.ts","import { Component } from '@angular/core';\nimport { DataService } from './services/data.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n\n  users: Array<any>;\n\n  constructor(private _dataService: DataService) {\n    this._dataService.getUsers()\n    .subscribe(res => this.users = res);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router'\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { HttpModule } from '@angular/http';\nimport { DataService } from './services/data.service';\nimport { PostService } from './services/post.service';\nimport { FriendService } from './services/friend.service';\nimport { NewsFeedComponent } from './components/news-feed/news-feed.component';\nimport { LogoutComponent } from './components/logout/logout.component';\nimport { FriendsComponent } from './components/friends/friends.component';\nimport { UserComponent } from './components/user/user.component';\nimport { AddFriendComponent } from './components/add-friend/add-friend.component';\n\n// Create routes\nconst appRoutes: Routes = [\n  {path:'', component:HomeComponent},\n  {path:'news-feed', component:NewsFeedComponent},\n  {path:'profile', component:ProfileComponent},\n  {path:'logout', component:LogoutComponent},\n  {path:'friends', component:FriendsComponent},\n  {path:'user/:id', component:UserComponent},\n  {path:'add-friend/:id', component:AddFriendComponent}\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    RegisterComponent,\n    HomeComponent,\n    LoginComponent,\n    NewsFeedComponent,\n    LogoutComponent,\n    ProfileComponent,\n    FriendsComponent,\n    UserComponent,\n    AddFriendComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    HttpModule,\n    FormsModule\n  ],\n  providers: [\n    DataService,\n    PostService,\n    FriendService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DataService } from '../../services/data.service';\nimport { PostService } from '../../services/post.service';\nimport { FriendService } from '../../services/friend.service';\nimport { FriendRelationship } from '../../models/FriendRelationship';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-friend',\n  templateUrl: './add-friend.component.html',\n  styleUrls: ['./add-friend.component.css']\n})\nexport class AddFriendComponent implements OnInit {\n\n  // Result for subscription\n  private sub:any;\n\n  // Friend id\n  friendID:string;\n\n  // User email\n  userEmail:string;\n\n  // User (logged in)\n  user:any;\n\n  // Friend user\n  friendUser:any;\n\n  // Friend relationship\n  friendRelationship:FriendRelationship;\n\n  constructor(private route: ActivatedRoute, private router: Router, private dataService:DataService,\n  private friendService:FriendService) {\n\n    // Start Authentication Code\n    this.userEmail = sessionStorage.getItem(\"user\");\n    \n    if(this.userEmail == null) {\n      // Set for error message\n      alert(\"You must be logged in to view that!\");\n      this.router.navigate(['/']);\n    }\n    // End Authentication Code\n\n    // Get the users id from the parameter\n    this.sub = this.route.params.subscribe(params => {\n      this.friendID = params['id']; // (+) converts string 'id' to a number\n      // In a real app: dispatch action to load the details here.\n    });\n\n    // Get the logged in user\n    this.dataService.getUser(sessionStorage.getItem(\"user\"))\n    .subscribe(res => {\n      this.user = res;\n      \n      // Get the anonymous user (friend)\n      // Get the user based on the sessionStorage\n      this.dataService.getAnonymousUser(this.friendID)\n      .subscribe(res => {\n        this.friendUser = res;\n\n        // Create the friendship object\n        this.friendRelationship = {\n          friend1: this.user[\"_id\"],\n          friend1Name: this.user[\"firstName\"]+\" \"+this.user[\"lastName\"],\n          friend1Profile: this.user[\"profile\"],\n          friend2: this.friendID,\n          friend2Name: this.friendUser[\"firstName\"]+\" \"+this.friendUser[\"lastName\"],\n          friend2Profile: this.friendUser[\"profile\"]\n        }\n\n        // Send this to the service.\n        this.sub = this.friendService.createFriendship(this.friendRelationship);\n\n        alert(\"You are now friends!\");\n        this.router.navigate(['/friends']);\n\n      });\n    });\n    \n\n  }\n\n  ngOnInit() {\n    // We need to get the current logged in user.\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/add-friend/add-friend.component.ts","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../../services/data.service';\nimport { PostService } from '../../services/post.service';\nimport { FriendService } from '../../services/friend.service';\nimport { Post } from '../../models/Post';\nimport { User } from '../../models/User';\n\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-friends',\n  templateUrl: './friends.component.html',\n  styleUrls: ['./friends.component.css']\n})\nexport class FriendsComponent implements OnInit {\n\n  // Session user\n  user:string;\n\n  // User from database\n  dbUser:any;\n\n  // User id\n  userID:string;\n\n  result:any;\n\n  // Updated user\n  updatedUser:User;\n\n  // Used for editing the profile\n  about:string;\n  profile:string;\n\n  // for users\n  users:Array<any>;\n\n  // Search query\n  friendSearch:string;\n\n  // Found users\n  foundUsers:Array<any> = [];\n\n  // Users friends\n  friendsFromDB:Array<any>;\n\n  constructor(public dataService:DataService, public postService:PostService, private router: Router,\n  public friendService:FriendService) { \n    \n    // Start Authentication Code\n    this.user = sessionStorage.getItem(\"user\");\n\n    if(this.user == null) {\n      // Set for error message\n      alert(\"You must be logged in to view that!\");\n      this.router.navigate(['/']);\n    }\n    // End Authentication Code\n\n  }\n\n  ngOnInit() {\n    // Put in seperate methods so they can be called again\n    this.getUser();\n\n    // On the page load get all users so we can compare if the user exists\n    this.dataService.getUsers()\n    .subscribe(res => this.users = res);\n\n  }\n\n  getUser() {\n    // Get the user based on the sessionStorage\n    this.dataService.getUser(sessionStorage.getItem(\"user\"))\n    .subscribe(res => {\n      this.dbUser = res;\n\n      this.userID = this.dbUser[\"_id\"];\n\n      // While we are here get the friends\n      this.friendService.getFriends(this.dbUser[\"_id\"])\n      .subscribe(res => this.friendsFromDB = res);\n    });\n  }\n\n  updateAccount() {\n    // Construct the user object.\n    this.updatedUser = {\n      firstName: this.dbUser[\"firstName\"],\n      lastName: this.dbUser[\"lastName\"],\n      email: this.dbUser[\"email\"],\n      password: this.dbUser[\"password\"],\n      profile: this.profile,\n      currentThought: this.dbUser[\"currentThought\"],\n      about: this.about,\n    }\n\n    this.result = this.dataService.updateUser(this.updatedUser);\n    alert(\"Profile information updated!\");\n    this.getUser();\n  }\n\n  searchFriends() {\n    // search the users for what was searched.\n    for (var i = 0; i < this.users.length; i++) {\n      // If the first name contains the search or the last name\n      if(this.users[i].firstName.toLowerCase().indexOf(this.friendSearch.toLowerCase()) >= 0\n      || this.users[i].lastName.toLowerCase().indexOf(this.friendSearch.toLocaleLowerCase()) >= 0) {\n        \n        if(this.users[i].email != sessionStorage.getItem(\"user\")) {\n          this.foundUsers.push(this.users[i]);\n        }\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/friends/friends.component.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  register:boolean;\n\n  constructor() { \n    this.register = true;\n  }\n\n  ngOnInit() {\n  }\n\n  changeComponent() {\n    this.register = !this.register;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/home/home.component.ts","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../../services/data.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  password:string;\n  email:string;\n  counter:number;\n\n  users: Array<any>;\n\n  constructor(public dataService:DataService, private router: Router) {\n    this.counter = 0;\n  }\n\n  ngOnInit() {\n    // On the page load get all users so we can compare if the user exists\n    this.dataService.getUsers()\n    .subscribe(res => this.users = res);\n  }\n\n  login() {\n    // We have to take the information and check if its correct\n    for (var i = 0; i < this.users.length; i++) {\n      // If the email matches\n      if(this.users[i][\"email\"] == this.email) {\n        // Check if the passwords match\n        if(this.users[i][\"password\"] == this.password) {\n          // Set the user session if its all okay!\n          sessionStorage.setItem(\"user\", this.email);\n          this.router.navigate(['/profile']);\n        }\n        else {\n          alert(\"The provided password is incorrect.\");\n          this.router.navigate(['/']);\n        }\n      } \n      // Its running this after every iteration. FIX IT!!\n      else {\n        this.counter++;\n      }\n    }\n\n    /* If the number of iterations is equal to the number of users,\n    the user does not exist */\n    if(this.counter == this.users.length) {\n      alert(\"That user does not exist\");\n      this.router.navigate(['/']);\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/login/login.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private router: Router) { \n    if(sessionStorage.getItem(\"user\") == null) {\n      this.router.navigate(['/']);\n    }\n    else {\n      // Remove the user session\n      sessionStorage.removeItem(\"user\");\n      alert(\"You have now been logged out.\");\n      this.router.navigate(['/']);\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/logout/logout.component.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  \n  user:any;\n\n  displayLogout:boolean;\n\n  constructor() { \n    this.displayLogout = false;\n    this.user = sessionStorage.getItem(\"user\");\n\n    if(this.user != null) {\n      this.displayLogout = true;\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/navbar/navbar.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { DataService } from '../../services/data.service';\nimport { PostService } from '../../services/post.service';\nimport { Post } from '../../models/Post';\nimport { User } from '../../models/User';\n\n@Component({\n  selector: 'app-news-feed',\n  templateUrl: './news-feed.component.html',\n  styleUrls: ['./news-feed.component.css']\n})\nexport class NewsFeedComponent implements OnInit {\n\n  // Session user\n  user:string;\n  \n  // User from database\n  dbUser:any;\n  \n  // Users posts from database\n  dbPosts:any;\n\n  // Post body for new post\n  postBody:string;\n\n  // New post\n  postObj:Post;\n\n  result:any;\n\n  // Updated user\n  updatedUser:User;\n\n  // Current thought\n  currentThought:string;\n\n  constructor(public dataService:DataService, public postService:PostService, private router: Router) { \n\n    // Start Authentication Code\n    this.user = sessionStorage.getItem(\"user\");\n\n    if(this.user == null) {\n      // Set for error message\n      alert(\"You must be logged in to view that!\");\n      this.router.navigate(['/']);\n    }\n    // End Authentication Code\n\n  }\n\n  ngOnInit() {\n    // Put in seperate methods so they can be called again\n    this.getUser();\n    this.getPosts();\n  }\n\n  getUser() {\n    // Get the user based on the sessionStorage\n    this.dataService.getUser(sessionStorage.getItem(\"user\"))\n    .subscribe(res => {\n      this.dbUser = res;\n    });\n  }\n\n  getPosts() {\n    // Get the users posts\n    this.postService.getUserPosts(sessionStorage.getItem(\"user\"))\n    .subscribe(res => {\n      this.dbPosts = res;\n    })\n  }\n\n  post() {\n    // Create the post object\n    this.postObj = {\n      email: sessionStorage.getItem(\"user\"),\n      body: this.postBody,\n      time: new Date().getMinutes().toString(),\n      date: new Date().toString()\n    }\n\n    // Post it to the API\n    this.result = this.postService.createPost(this.postObj);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/news-feed/news-feed.component.ts","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../../services/data.service';\nimport { PostService } from '../../services/post.service';\nimport { Post } from '../../models/Post';\nimport { User } from '../../models/User';\n\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  // Session user\n  user:string;\n\n  // User from database\n  dbUser:any;\n  \n  // Users posts from database\n  dbPosts:any;\n\n  // Post body for new post\n  postBody:string;\n\n  // New post\n  postObj:Post;\n\n  result:any;\n\n  // Updated user\n  updatedUser:User;\n\n  // Current thought\n  currentThought:string;\n\n  // Used for editing the profile\n  about:string;\n  profile:string;\n\n  constructor(public dataService:DataService, public postService:PostService, private router: Router) { \n    \n    // Start Authentication Code\n    this.user = sessionStorage.getItem(\"user\");\n\n    if(this.user == null) {\n      // Set for error message\n      alert(\"You must be logged in to view that!\");\n      this.router.navigate(['/']);\n    }\n    // End Authentication Code\n\n  }\n\n  ngOnInit() {\n    // Put in seperate methods so they can be called again\n    this.getUser();\n    this.getPosts();\n  }\n\n  getUser() {\n    // Get the user based on the sessionStorage\n    this.dataService.getUser(sessionStorage.getItem(\"user\"))\n    .subscribe(res => {\n      this.dbUser = res;\n    });\n  }\n\n  getPosts() {\n    // Get the users posts\n    this.postService.getUserPosts(sessionStorage.getItem(\"user\"))\n    .subscribe(res => {\n      this.dbPosts = res;\n    })\n  }\n\n  post() {\n    // Create the post object\n    this.postObj = {\n      email: sessionStorage.getItem(\"user\"),\n      body: this.postBody,\n      time: new Date().getMinutes().toString(),\n      date: new Date().toString()\n    }\n\n    // Post it to the API\n    this.result = this.postService.createPost(this.postObj);\n\n    // Notify the user.\n    alert(\"Post created successfully\");\n    // Call posts again to update the list.\n    this.getPosts(); \n  }\n\n  thought() {\n    // Construct the user object.\n    this.updatedUser = {\n      firstName: this.dbUser[\"firstName\"],\n      lastName: this.dbUser[\"lastName\"],\n      email: this.dbUser[\"email\"],\n      password: this.dbUser[\"password\"],\n      profile: this.dbUser[\"profile\"],\n      currentThought: this.currentThought,\n      about: this.dbUser[\"about\"],\n    }\n\n    this.result = this.dataService.updateUser(this.updatedUser);\n    alert(\"Current thought updated!\");\n    this.getUser();\n  }\n\n  updateAccount() {\n    // Construct the user object.\n    this.updatedUser = {\n      firstName: this.dbUser[\"firstName\"],\n      lastName: this.dbUser[\"lastName\"],\n      email: this.dbUser[\"email\"],\n      password: this.dbUser[\"password\"],\n      profile: this.profile,\n      currentThought: this.dbUser[\"currentThought\"],\n      about: this.about,\n    }\n\n    this.result = this.dataService.updateUser(this.updatedUser);\n    alert(\"Profile information updated!\");\n    this.getUser();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/profile/profile.component.ts","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../../services/data.service';\nimport { Router } from '@angular/router';\n\nimport { User } from '../../models/User';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  // User information\n  email:string;\n  firstName:string;\n  lastName:string;\n  password:string;\n\n  // The user object\n  user:User;\n\n  // Array of users to hold users when checking if the user exists\n  users: Array<any>;\n\n  // Boolean to determine if the user exists and for user error\n  userExists: boolean = false;\n  userError: boolean = false;\n\n  // Result for user registration\n  result:any;\n\n  // Create the data service instance in the constructor.\n  constructor(public dataService:DataService, private router: Router) { }\n\n  ngOnInit() {\n    // On the page load get all users so we can compare if the user exists\n    this.dataService.getUsers()\n    .subscribe(res => this.users = res);\n  }\n\n  registerUser() {\n\n    // Assigning values to the user object\n    this.user = {\n      firstName: this.firstName,\n      lastName: this.lastName,\n      email: this.email,\n      password: this.password,\n      profile: \"http://www.informatics.illinois.edu/wp-content/uploads/2013/10/profile-placeholder.png\",\n      currentThought: \"\",\n      about: \"Nothing yet\"\n    }\n\n    /* We have all the users now we need to loop through them and check\n    to see if any match */\n    for (var i = 0; i < this.users.length; i++) {\n      if(this.users[i][\"email\"] == this.user.email) {\n        this.userExists = true;\n        this.userError = true;\n      }\n    }\n   \n   // Now we can register the user if they don't exist using the data service.\n   if(!this.userExists) {\n     this.result = this.dataService.registerUser(this.user);\n\n     // Set a session variable to get user data and proove they are logged in\n     sessionStorage.setItem(\"user\", this.user.email);\n\n     // Alert the user\n     alert(\"You have registered successfully and will now be logged in\");\n     \n     // Now redirect to the news feed.\n     this.router.navigate(['/news-feed']);\n   } else {\n     alert(\"A user with that email already exists. Choose another or try again.\");\n   }\n   this.userExists = false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/register/register.component.ts","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { DataService } from '../../services/data.service';\nimport { PostService } from '../../services/post.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  // The current logged in users id.\n  loggedInUser:string;\n\n  // Hold specified user id\n  user:string;\n\n  // The user object that was retrieved after giving the id\n  userObj:any;\n\n  // Property for the subscription to get parameter\n  private sub:any;\n\n  // Users posts\n  userPosts:Array<any>;\n\n  constructor(private router: Router, private route: ActivatedRoute, private dataService: DataService,\n    private postService: PostService) { \n    // Start Authentication Code\n    this.loggedInUser = sessionStorage.getItem(\"user\");\n    \n    if(this.loggedInUser == null) {\n      // Set for error message\n      alert(\"You must be logged in to view that!\");\n      this.router.navigate(['/']);\n    }\n    // End Authentication Code\n\n    // Get the users id from the parameter\n    this.sub = this.route.params.subscribe(params => {\n      this.user = params['id']; // (+) converts string 'id' to a number\n      // In a real app: dispatch action to load the details here.\n   });\n\n   // Check to see if the logged in user is trying to find their profile and if so send them there\n   if(this.user == sessionStorage.getItem(\"user\")) {\n     this.router.navigate(['/profile']);\n   }\n\n   // Now lets get that user\n   this.getUser();\n  }\n\n  getUser() {\n    // Get the user based on the sessionStorage\n    this.dataService.getAnonymousUser(this.user)\n    .subscribe(res => {\n      this.userObj = res;\n\n      // While we are asynchronous we may aswell grab the posts too!\n      this.postService.getUserPosts(this.userObj[\"email\"])\n      .subscribe(res => {\n        this.userPosts = res;\n      })\n    });\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/user/user.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 172\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/add-friend/add-friend.component.css\n// module id = 173\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/friends/friends.component.css\n// module id = 174\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/home/home.component.css\n// module id = 175\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/login/login.component.css\n// module id = 176\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/logout/logout.component.css\n// module id = 177\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/navbar/navbar.component.css\n// module id = 178\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/news-feed/news-feed.component.css\n// module id = 179\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/profile/profile.component.css\n// module id = 180\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/register/register.component.css\n// module id = 181\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/user.component.css\n// module id = 182\n// module chunks = 1","module.exports = \"<app-navbar></app-navbar>\\n\\n<!-- This specifies that the router will handle this -->\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 186\n// module chunks = 1","module.exports = \"<p>\\n Please wait...\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/add-friend/add-friend.component.html\n// module id = 187\n// module chunks = 1","module.exports = \"<br/>\\n<ul class=\\\"nav nav-pills nav-fill\\\">\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" href=\\\"/profile\\\">Profile</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link active\\\" href=\\\"/friends\\\">Friends</a>\\n    </li>\\n  </ul>\\n<br/>\\n\\n\\n<div class=\\\"row\\\">\\n<div class=\\\"col-md-3\\\">\\n    <img src=\\\"{{dbUser.profile}}\\\" width=\\\"100%\\\" style=\\\"border-radius: 5px; margin-bottom: 5px;\\\" />\\n<h3>{{dbUser.firstName}} {{dbUser.lastName}}\\n  <br/>\\n  <small>{{dbUser.about}}</small></h3>\\n<hr/>\\n\\n<form (submit)=\\\"updateAccount()\\\">\\n  <div class=\\\"form-group\\\">\\n      <label for=\\\"profile\\\">Profile Picture:</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"profile\\\" value=\\\"{{dbUser.profile}}\\\" [(ngModel)]=\\\"profile\\\" name=\\\"profile\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n      <label for=\\\"about\\\">About:</label>\\n      <textarea class=\\\"form-control\\\" id=\\\"about\\\" [(ngModel)]=\\\"about\\\" name=\\\"about\\\">{{dbUser.about}}</textarea>\\n  </div>\\n  <input type=\\\"submit\\\" value=\\\"Edit Account\\\" class=\\\"btn btn-secondary btn-block\\\" />\\n</form>\\n\\n</div>\\n<div class=\\\"col-md-9\\\">\\n  <h3>Search for a Friend:</h3>\\n  <form (submit)=\\\"searchFriends()\\\">\\n    <div class=\\\"form-group\\\">\\n        <input class=\\\"form-control form-control-lg\\\" type=\\\"text\\\" placeholder=\\\"Enter a Name\\\" name=\\\"friendSearch\\\" [(ngModel)]=\\\"friendSearch\\\">\\n    </div>\\n    <div class=\\\"float-right\\\">\\n        <input type=\\\"submit\\\" value=\\\"Search\\\" class=\\\"btn btn-secondary btn-block\\\" />\\n    </div>\\n  </form>\\n  <br/><br/>\\n  <div *ngIf=\\\"foundUsers.length > 0\\\">\\n      Search Results:\\n      <hr/>\\n      <div *ngFor=\\\"let friend of foundUsers\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-2\\\">\\n                  <img src=\\\"{{friend.profile}}\\\" width=\\\"100%\\\" style=\\\"border-radius: 5px; margin-bottom: 5px;\\\" />\\n              </div>\\n              <div class=\\\"col-md-10\\\">\\n                <p>{{friend.firstName}} {{friend.lastName}}<br/>\\n                <small>{{friend.about}}</small></p>\\n                <a href=\\\"/user/{{friend._id}}\\\" class=\\\"btn btn-secondary\\\">View Profile</a>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <br/>\\n      </div>\\n  </div>\\n  <hr/>\\n  <h4>Your Friends:</h4>\\n  <div *ngIf=\\\"friendsFromDB\\\">\\n    <div *ngFor=\\\"let friend of friendsFromDB\\\">\\n\\n      <!-- If the logged in user is the first friend, take the second friend-->\\n      <div *ngIf=\\\"friend.friend1 == userID\\\">\\n          <div class=\\\"card\\\">\\n              <div class=\\\"card-body\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-2\\\">\\n                      <img src=\\\"{{friend.friend2Profile}}\\\" width=\\\"100%\\\" style=\\\"border-radius: 5px; margin-bottom: 5px;\\\" />\\n                  </div>\\n                  <div class=\\\"col-md-10\\\">\\n                    <p>{{friend.friend2Name}}<br/>\\n                    <a href=\\\"/user/{{friend.friend2}}\\\" class=\\\"btn btn-secondary\\\">View Profile</a>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n      </div>\\n\\n      <!-- If the logged in user is the second friend, take the first friend-->\\n      <div *ngIf=\\\"friend.friend2 == userID\\\">\\n          <div class=\\\"card\\\">\\n              <div class=\\\"card-body\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-2\\\">\\n                      <img src=\\\"{{friend.friend1Profile}}\\\" width=\\\"100%\\\" style=\\\"border-radius: 5px; margin-bottom: 5px;\\\" />\\n                  </div>\\n                  <div class=\\\"col-md-10\\\">\\n                    <p>{{friend.friend1Name}}<br/>\\n                    <a href=\\\"/user/{{friend.friend1}}\\\" class=\\\"btn btn-secondary\\\">View Profile</a>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n      </div>\\n\\n      <br/>\\n    </div>\\n  </div>\\n</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/friends/friends.component.html\n// module id = 188\n// module chunks = 1","module.exports = \"<br/><br/>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-5\\\">\\n\\n  </div>\\n  <div class=\\\"col-md-6\\\">\\n    <div *ngIf=\\\"error == true\\\">\\n      <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n          You must be logged in to view that!\\n      </div>\\n    </div>\\n    <app-register *ngIf=\\\"register == true\\\"></app-register>\\n    <app-login *ngIf=\\\"register == false\\\"></app-login>\\n\\n    <br/>\\n    <div class=\\\"float-right\\\">\\n      <button *ngIf=\\\"register == true\\\" class=\\\"btn btn-default\\\" (click)=\\\"changeComponent()\\\">Want to Login Instead?</button>\\n      <button *ngIf=\\\"register == false\\\" class=\\\"btn btn-default\\\" (click)=\\\"changeComponent()\\\">Want to Register Instead?</button>\\n    </div>\\n  </div>\\n  <div class=\\\"col-md-1\\\">\\n\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/home/home.component.html\n// module id = 189\n// module chunks = 1","module.exports = \"<h3>Welcome Back!</h3>\\n<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <form (submit)=\\\"login()\\\">\\n    <div class=\\\"form-group\\\">            \\n      <label for=\\\"email\\\">Email:</label>\\n      <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\">\\n      <small id=\\\"email_help\\\" class=\\\"form-text text-muted\\\">We'll never share your email with anyone else.</small>  \\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Password:</label>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\">\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Login</button>\\n  </form>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/login/login.component.html\n// module id = 190\n// module chunks = 1","module.exports = \"<p>\\nYou are now logged out.\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/logout/logout.component.html\n// module id = 191\n// module chunks = 1","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n  <div class=\\\"container\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"/\\\">Vark</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n  \\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n          <li *ngIf=\\\"displayLogout == true\\\" class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" href=\\\"/logout\\\">Logout ({{user}})</a>\\n          </li>\\n      </ul>\\n      <!--\\n      <form class=\\\"form-inline my-2 my-lg-0\\\">\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\">\\n        <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n      </form>\\n    -->\\n    </div>\\n    </div>\\n  </nav>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/navbar/navbar.component.html\n// module id = 192\n// module chunks = 1","module.exports = \"<br/>\\n<ul class=\\\"nav nav-pills nav-fill\\\">\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" href=\\\"/news-feed\\\">News Feed</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link active\\\" href=\\\"/profile\\\">Profile</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" href=\\\"/friends\\\">Friends</a>\\n    </li>\\n  </ul>\\n<br/>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-3\\\">\\n    <img src=\\\"{{dbUser.profile}}\\\" width=\\\"20%\\\" style=\\\"border-radius: 5px; margin-bottom: 5px;\\\" />\\n    <P>{{dbUser.firstName}} {{dbUser.lastName}}</P>\\n  </div>\\n\\n  <div *ngFor=\\\"let post of dbPosts\\\">\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4\\\">\\n              <img src=\\\"{{dbUser.profile}}\\\" width=\\\"40%\\\" style=\\\"border-radius: 5px; margin-bottom: 5px;\\\" /><br/>\\n              {{dbUser.firstName}} {{dbUser.lastName}}<br/>\\n              <small>{{post.time}} {{post.date}}</small>\\n            </div>\\n            <div class=\\\"col-md-8\\\">\\n              <p class=\\\"lead\\\">{{post.body}}</p>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <br/>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/news-feed/news-feed.component.html\n// module id = 193\n// module chunks = 1","module.exports = \"<br/>\\n  <ul class=\\\"nav nav-pills nav-fill\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link active\\\" href=\\\"/profile\\\">Profile</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"/friends\\\">Friends</a>\\n      </li>\\n    </ul>\\n<br/>\\n\\n<div class=\\\"row\\\">\\n<div class=\\\"col-md-3\\\">\\n  <img src=\\\"{{dbUser.profile}}\\\" width=\\\"100%\\\" style=\\\"border-radius: 5px; margin-bottom: 5px;\\\" />\\n</div>\\n<div class=\\\"col-md-9\\\">\\n\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\">\\n      <!-- Purposely Empty -->\\n    </div>\\n\\n    <div class=\\\"col-md-8\\\" style=\\\"padding-top: 60px;\\\">\\n      <h2>{{dbUser.currentThought}}</h2>\\n    </div>\\n  </div>\\n\\n</div>\\n</div>\\n<div class=\\\"row\\\">\\n<div class=\\\"col-md-3\\\">\\n  <h3>{{dbUser.firstName}} {{dbUser.lastName}}\\n    <br/>\\n    <small>{{dbUser.about}}</small></h3>\\n  <hr/>\\n\\n  <form (submit)=\\\"updateAccount()\\\">\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"profile\\\">Profile Picture:</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"profile\\\" value=\\\"{{dbUser.profile}}\\\" [(ngModel)]=\\\"profile\\\" name=\\\"profile\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"about\\\">About:</label>\\n        <textarea class=\\\"form-control\\\" id=\\\"about\\\" [(ngModel)]=\\\"about\\\" name=\\\"about\\\">{{dbUser.about}}</textarea>\\n    </div>\\n    <input type=\\\"submit\\\" value=\\\"Edit Account\\\" class=\\\"btn btn-secondary btn-block\\\" />\\n  </form>\\n\\n  </div>\\n<div class=\\\"col-md-9\\\">\\n  <form (submit)=\\\"thought()\\\">\\n        <h4>Update Current Thought</h4>\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"form-group\\\">\\n                 <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Update Current Thought\\\" [(ngModel)]=\\\"currentThought\\\" name=\\\"currentThought\\\">\\n            </div>\\n             <div class=\\\"float-right\\\">\\n                   <input type=\\\"submit\\\" value=\\\"Update Current Thought\\\" class=\\\"btn btn-secondary btn-block\\\" />\\n              </div>\\n           </div>\\n         </div>\\n       </form>\\n       <br/>\\n       <h4>Make a Post</h4>\\n       <form (submit)=\\\"post()\\\">\\n         <div class=\\\"card\\\">\\n           <div class=\\\"card-body\\\">\\n             <div class=\\\"form-group\\\">\\n                 <textarea class=\\\"form-control\\\" placeholder=\\\"Make a post..\\\" name=\\\"postBody\\\" [(ngModel)]=\\\"postBody\\\"></textarea>\\n            </div>\\n            <div class=\\\"float-right\\\">\\n              <input type=\\\"submit\\\" value=\\\"Post\\\" class=\\\"btn btn-secondary\\\">\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n      <br/>\\n      <h4>Your Posts:</h4>\\n\\n      <div *ngFor=\\\"let post of dbPosts\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4\\\">\\n                  <img src=\\\"{{dbUser.profile}}\\\" width=\\\"40%\\\" style=\\\"border-radius: 5px; margin-bottom: 5px;\\\" /><br/>\\n                  {{dbUser.firstName}} {{dbUser.lastName}}<br/>\\n                  <small>{{post.time}} {{post.date}}</small>\\n                </div>\\n                <div class=\\\"col-md-8\\\">\\n                  <p class=\\\"lead\\\">{{post.body}}</p>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <br/>\\n      </div>\\n</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/profile/profile.component.html\n// module id = 194\n// module chunks = 1","module.exports = \"<h3>Come Join The Fun!</h3>\\n<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n      <form (submit)=\\\"registerUser()\\\">\\n          <div class=\\\"form-group\\\">            \\n            <label for=\\\"email\\\">Email:</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\">\\n            <small id=\\\"email_help\\\" class=\\\"form-text text-muted\\\">We'll never share your email with anyone else.</small>  \\n            \\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"form-group\\\">\\n\\n                    <label for=\\\"name\\\">First Name:</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"firstName\\\" name=\\\"firstName\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"form-group\\\">\\n                    \\n                    <label for=\\\"name\\\">Last Name:</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"lastName\\\" name=\\\"lastName\\\">\\n                </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">Password:</label>\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\">\\n          </div>\\n          <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Register\\\">\\n      </form>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/register/register.component.html\n// module id = 195\n// module chunks = 1","module.exports = \"<br/>\\n<ul class=\\\"nav nav-pills nav-fill\\\">\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" href=\\\"/news-feed\\\">News Feed</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" href=\\\"/profile\\\">Profile</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link active\\\" href=\\\"/friends\\\">Friends</a>\\n    </li>\\n  </ul>\\n<br/>\\n\\n<div class=\\\"row\\\">\\n<div class=\\\"col-md-3\\\">\\n<img src=\\\"{{userObj.profile}}\\\" width=\\\"100%\\\" style=\\\"border-radius: 5px; margin-bottom: 5px;\\\" />\\n</div>\\n<div class=\\\"col-md-9\\\">\\n\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-3\\\">\\n    <!-- Purposely Empty -->\\n  </div>\\n\\n  <div class=\\\"col-md-8\\\" style=\\\"padding-top: 60px;\\\">\\n    <h2>{{userObj.currentThought}}</h2>\\n  </div>\\n</div>\\n\\n</div>\\n</div>\\n<div class=\\\"row\\\">\\n<div class=\\\"col-md-3\\\">\\n<h3>{{userObj.firstName}} {{userObj.lastName}}\\n  <br/>\\n  <small>{{userObj.about}}</small></h3>\\n<hr/>\\n<a href=\\\"/add-friend/{{userObj._id}}\\\" class=\\\"btn btn-secondary\\\">Add as a Friend</a>\\n\\n</div>\\n<div class=\\\"col-md-9\\\">\\n    <br/>\\n    <h4>{{objUser}}'s Posts:</h4>\\n\\n    <div *ngFor=\\\"let post of userPosts\\\">\\n      <div class=\\\"card\\\">\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-4\\\">\\n                <img src=\\\"{{userObj.profile}}\\\" width=\\\"40%\\\" style=\\\"border-radius: 5px; margin-bottom: 5px;\\\" /><br/>\\n                {{userObj.firstName}} {{userObj.lastName}}<br/>\\n                <small>{{post.time}} {{post.date}}</small>\\n              </div>\\n              <div class=\\\"col-md-8\\\">\\n                <p class=\\\"lead\\\">{{post.body}}</p>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <br/>\\n    </div>\\n</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/user.component.html\n// module id = 196\n// module chunks = 1","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions } from '@angular/http';\n\nimport { Post } from '../models/Post';\nimport { User } from '../models/User';\n\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class PostService {\n\n  result:any;\n\n  constructor(private _http: Http) { }\n\n  // Create a post\n  createPost(post:Post) {\n    // Convert the post object to JSON\n    let body = JSON.stringify(post);\n    /* Create the headers to tell the API we are using\n    JSON */\n    let headers = new Headers({'Content-Type': 'application/json'});\n    // Set these in options\n    let options = new RequestOptions({ headers: headers });\n\n    // Make the request\n    return this._http.post(\"/api/posts\", body, options)\n    .map((data:any) => data.json())\n    .subscribe();\n  }\n\n  // Get all posts based on user\n  getUserPosts(user:string) {\n    return this._http.get(\"/api/posts/\"+user)\n    .map(result => this.result = result.json().data);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/post.service.ts","import { Injectable } from '@angular/core';\nimport { User } from '../models/User';\nimport { FriendRelationship } from '../models/FriendRelationship';\nimport { Http, Headers, RequestOptions } from '@angular/http';\n\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class FriendService {\n\n  result:any;\n\n  constructor(private http: Http) { }\n\n  getFriends(user:string) {\n    // Takes users id in and finds all of their friends\n    return this.http.get(\"/api/friends/\"+user)\n    .map(result => this.result = result.json().data);\n  }\n\n  createFriendship(friendship:FriendRelationship) {\n    // Convert the user object to JSON\n    let body = JSON.stringify(friendship);\n    /* Create the headers to tell the API we are using\n    JSON */\n    let headers = new Headers({'Content-Type': 'application/json'});\n    // Set these in options\n    let options = new RequestOptions({ headers: headers });\n\n    // Make the request\n    return this.http.post(\"/api/friends\", body, options)\n    .map((data:any) => data.json())\n    .subscribe();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/friend.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 95;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 95\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":""}